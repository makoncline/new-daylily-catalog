generator client {
  provider = "prisma-client-js"
  output   = "./generated/postgres-client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ahs_data {
  id           Int      @id @default(autoincrement())
  ahs_id       Int      @unique
  name         String?
  hybridizer   String?
  year         String?
  scape_height String?
  bloom_size   String?
  bloom_season String?
  ploidy       String?
  foliage_type String?
  bloom_habit  String?
  seedling_num String?
  color        String?
  form         String?
  parentage    String?
  image        String?
  fragrance    String?
  budcount     String?
  branches     String?
  sculpting    String?
  foliage      String?
  flower       String?
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @default(now()) @db.Timestamptz(6)
  lilies       lilies[]

  @@index([ahs_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model lilies {
  id           Int       @id @default(autoincrement())
  user_id      Int       @default(dbgenerated("current_user_id()"))
  name         String
  img_url      String[]
  price        Decimal?  @db.Decimal(12, 2)
  public_note  String?
  private_note String?
  ahs_id       String?
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at   DateTime  @default(now()) @db.Timestamptz(6)
  list_id      Int?
  ahs_ref      Int?      @default(dbgenerated("(ahs_id)::integer"))
  ahs_data     ahs_data? @relation(fields: [ahs_ref], references: [ahs_id], onDelete: NoAction, onUpdate: NoAction)
  lists        lists?    @relation(fields: [list_id], references: [id], onUpdate: NoAction)
  users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([ahs_ref])
  @@index([list_id])
  @@index([user_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model lists {
  id         Int      @id @default(autoincrement())
  user_id    Int      @default(dbgenerated("current_user_id()"))
  name       String
  intro      String?
  bio        String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  lilies     lilies[]
  users      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stripe_customers {
  id                   String                @id
  user_id              Int                   @unique @default(dbgenerated("current_user_id()"))
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  users                users                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  stripe_subscriptions stripe_subscriptions?

  @@index([user_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model stripe_subscriptions {
  id               String           @id
  user_id          Int              @unique @default(dbgenerated("current_user_id()"))
  customer_id      String           @unique
  created_at       DateTime         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime         @default(now()) @db.Timestamptz(6)
  stripe_customers stripe_customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users            users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([customer_id])
  @@index([user_id])
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model temp_table {
// }

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_authentications {
  id         Int      @id @default(autoincrement())
  user_id    Int
  service    String
  identifier String
  details    Json     @default("{}")
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([service, identifier], map: "uniq_user_authentications")
  @@index([user_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_emails {
  id          Int      @id @default(autoincrement())
  user_id     Int      @default(dbgenerated("current_user_id()"))
  email       String   @db.Citext
  is_verified Boolean  @default(false)
  is_primary  Boolean  @default(false)
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
  users       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, email])
  @@index([is_primary, user_id], map: "idx_user_emails_primary")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                   Int                    @id @default(autoincrement())
  username             String                 @unique @db.Citext
  name                 String?
  avatar_url           String?
  is_admin             Boolean                @default(false)
  is_verified          Boolean                @default(false)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  intro                String?
  bio                  String?
  user_location        String?
  img_urls             String[]               @default([])
  free_until           DateTime?              @db.Timestamptz(6)
  lilies               lilies[]
  lists                lists[]
  stripe_customers     stripe_customers?
  stripe_subscriptions stripe_subscriptions?
  user_authentications user_authentications[]
  user_emails          user_emails[]
}
