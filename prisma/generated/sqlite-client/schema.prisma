generator client {
  provider = "prisma-client-js"
  output   = "./generated/sqlite-client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AhsListing {
  id          String   @id @default(cuid())
  name        String?
  hybridizer  String?
  year        String?
  scapeHeight String?
  bloomSize   String?
  bloomSeason String?
  ploidy      String?
  foliageType String?
  bloomHabit  String?
  seedlingNum String?
  color       String?
  form        String?
  parentage   String?
  ahsImageUrl String?
  fragrance   String?
  budcount    String?
  branches    String?
  sculpting   String?
  foliage     String?
  flower      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  lilies Listing[]
}

model Listing {
  id          String   @id @default(cuid())
  userId      String
  name        String
  price       Float?
  publicNote  String?
  privateNote String?
  listId      String?
  ahsId       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  images Image[]

  ahsListing AhsListing? @relation(fields: [ahsId], references: [id])
  list       List?       @relation(fields: [listId], references: [id])
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([ahsId])
  @@index([listId])
  @@index([userId])
}

model List {
  id        String    @id @default(cuid())
  userId    String
  name      String
  intro     String?
  bio       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  listings  Listing[]
  user      User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model UserProfile {
  id           String   @id @default(cuid())
  userId       String   @unique
  logoUrl      String?
  intro        String?
  bio          String?
  userLocation String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  images Image[]
}

model Image {
  id        String   @id @default(cuid())
  url       String
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userProfileId String?
  listingId     String?

  userProfile UserProfile? @relation(fields: [userProfileId], references: [id])
  listing     Listing?     @relation(fields: [listingId], references: [id])

  @@index([userProfileId])
  @@index([listingId])
}

model User {
  id               String       @id @default(cuid())
  clerkUserId      String?      @unique
  stripeCustomerId String?      @unique
  email            String       @unique
  username         String       @unique
  role             String?      @default("USER")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  listings         Listing[]
  lists            List[]
  profile          UserProfile?
}

model KeyValue {
  key       String   @id
  value     String // Will store JSON stringified values
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
